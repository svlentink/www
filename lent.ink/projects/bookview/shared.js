/*
How to use this:
Just explore it in the console of your browser at '/views/example/'
start with 'pushChap(42)' and follow with 'getImages()'
*/
(function (glob) {
  'use strict';

/*
This repo holds no copy right material,
so we point to the url that holds that part
*/
  var pagesPrefix = 'http://curly.ninja:8000/pages/'

/*
You should use pushChap to add a new one
*/
var  getSetChaps = function(chaps){ // insert nothing, comma separated string or array
console.log('TODO this does not work anymore')
  if (chaps) window.localStorage.setItem('chapterlist',chaps.toString()) // toString allows us to use string or array
  var str = window.localStorage.getItem('chapterlist') || window.location.hash
  if (str[0] === '#') str = str.substr(1) //removing hash
  window.location.hash = str
  var chapids = str.split(',')
  var result = []
  for (var i=0;i< chapids.length;i++){
    var id = chapids[i]
    var s = book.raw()['chapters'][id]
    if(s) result.push(s)
    else console.log('The following chap could not be found:',id)
  }
  return result
}
var getPagesToDisplay = function(chaps){ // just leave empty and it will use the chapterlist from localstorage
  chaps = chaps || getSetChaps()
  var toBeDisplayed = []
  for (var i=0;i<chaps.length;chaps++) {
    var chap = chaps[i]
    // looping over half pages (columns)
    var s = chap.start
    var e = chap.end
    for (var c=s;c<=e;c+=.5) toBeDisplayed.push(c)
  }
  // now stripping multiple preceding duplicates
  var last = 0
  var cleanarr = toBeDisplayed.length?[toBeDisplayed[0]]:[]
  for (var j=0;j<toBeDisplayed.length;j++){
    if (j !== last) cleanarr.push(toBeDisplayed[j])
    last = j
  }
  return cleanarr
}
var pushChap=function(id){
  var list = getSetChaps()
  list.push(id)
  return getSetChaps(id)
}
/*
The the images elements wrapped in a container
*/
var getImages = function(maxCols,pages){
  pages = pages || getPagesToDisplay()
  maxCols = maxCols || 9999 // this can be handy when you want vertical scrolling, setting the max colums on a row, however, I've found that horizontal scrolling also works fine

  var cont = document.createElement('div')
  cont.setAttribute('class','images-container')

  function setImg(nr, showWhole){
    var elem = document.createElement('img')
    var url = Book.pagesUrl + Book.raw().pages[Math.floor(nr)].file
    elem.setAttribute('src',url)
    var clss = 'wholepage'
    if(!showWhole){
      if(Math.floor(nr) !== nr) clss = 'rightcolumn'
      else clss = 'leftcolumn'
    }
    elem.setAttribute('class',clss)
    cont.appendChild(elem)
  }

  for (var i=0;i<pages.length;i+=maxCols){
    var row = []
    for(var j=0;j<maxCols;j++) if (j+i<pages.length) row.push(pages[j+i])
    for(var k=0; k<row.length;k++)
      if(k+1 !== row.length){
        if (row[k] === Math.floor(row[k+1])) {
          setImg(row[k],true)
          k++
        }else setImg(row[k])
      }else setImg(row[k])
    var hr = document.createElement('hr')
    hr.setAttribute('class','image-row')
    cont.appendChild(hr)
  }

  return cont // you can append this to your body
}


var book = {
  getSetChaps : getSetChaps,
  getPagesToDisplay:getPagesToDisplay,
  pushChap: pushChap,
  getImages:getImages,
  pagesUrl: pagesPrefix
}
glob.Book = book

var xhr=new XMLHttpRequest()
xhr.open('GET', '/autogenerated.json', true)
xhr.responseType='json'
xhr.onload=function(){
  if (xhr.status !== 200) throw new Error('Loading failed')
  book['raw'] = function() {return xhr.response} // function for immutable data
  if (glob.postLoadingHook) glob.postLoadingHook() // allow others to set this function
  else console.log('Config loaded but no postLoadingHook found')
}
xhr.send()

}(window))
console.log('Shared lib loaded without errs, you can now use window.Book')
